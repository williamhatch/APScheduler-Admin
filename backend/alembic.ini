# 数据库迁移配置文件

[alembic]
# 脚本位置
script_location = migrations

# 模板使用jinja2
# 如果使用其他模板系统，请修改这里
# jinja2 = jinja2

# 日志记录配置
# 如果设置为 "true"，则输出将包含迁移脚本的完整SQL
# output_encoding = utf-8

sqlalchemy.url = driver://user:pass@localhost/dbname

# 自动生成的迁移脚本的命名模式
# 默认为 %%(rev)s_%%(slug)s
# 可用的变量: rev, slug, year, month, day, hour, minute, second
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# 设置为 'true' 以允许注释在迁移脚本中
# 默认为 'false'
# revision_environment = false

# 设置为 'true' 以强制使用 URL 中的 DATABASE_URL 环境变量
# 默认为 'false'
# 如果设置为 'true'，则 sqlalchemy.url 将被忽略
# use_env_variable = true

# 设置为 'true' 以使用 ALEMBIC_CONFIG 环境变量
# 默认为 'false'
# 如果设置为 'true'，则 alembic.ini 将被忽略
# use_env_variable = true

# 设置为 'true' 以使用 ALEMBIC_CONFIG 环境变量
# 默认为 'false'
# 如果设置为 'true'，则 alembic.ini 将被忽略
# use_env_variable = true

# 设置为 'true' 以使用 ALEMBIC_CONFIG 环境变量
# 默认为 'false'
# 如果设置为 'true'，则 alembic.ini 将被忽略
# use_env_variable = true

# 设置为 'true' 以使用 ALEMBIC_CONFIG 环境变量
# 默认为 'false'
# 如果设置为 'true'，则 alembic.ini 将被忽略
# use_env_variable = true

# 设置为 'true' 以使用 ALEMBIC_CONFIG 环境变量
# 默认为 'false'
# 如果设置为 'true'，则 alembic.ini 将被忽略
# use_env_variable = true

[post_write_hooks]
# post_write_hooks 定义了在迁移脚本写入磁盘后要运行的钩子
# 格式为 key = value [, key = value]
# 钩子的预定义值为: python, shell
# 钩子的预定义值为: python, shell
# 要使用 black 格式化迁移脚本，可以使用以下钩子:
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
