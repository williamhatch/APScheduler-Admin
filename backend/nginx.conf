server {
    listen 8000;
    server_name localhost;
    
    # 跨域配置
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    
    # 处理 OPTIONS 请求
    if ($request_method = "OPTIONS") {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }
    
    # 静态文件
    location / {
        root /app/static;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
    
    # API 模拟 - 登录 (支持所有 POST 请求，无论内容类型)
    location = /api/v1/auth/login {
        if ($request_method = "POST") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"access_token": "mock_token", "token_type": "bearer", "user": {"id": 1, "username": "admin", "email": "admin@example.com", "is_active": true, "is_superuser": true}}';
        }
        
        return 405;
    }
    
    # 兼容旧路径
    location = /api/v1/users/login {
        if ($request_method = "POST") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"access_token": "mock_token", "token_type": "bearer", "user": {"id": 1, "username": "admin", "email": "admin@example.com", "is_active": true, "is_superuser": true}}';
        }
        
        return 405;
    }
    
    # 获取当前用户信息
    location = /api/v1/users/me {
        if ($request_method = "GET") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"id": 1, "username": "admin", "email": "admin@example.com", "is_active": true, "is_superuser": true}';
        }
        
        return 405;
    }
    
    # 测试令牌
    location = /api/v1/auth/test-token {
        if ($request_method = "POST") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"status": "success", "message": "Token is valid"}';
        }
        
        return 405;
    }
    
    # 任务管理
    location /api/v1/jobs {
        if ($request_method = "GET") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"items": [{"id": 1, "name": "测试任务", "func": "test_job", "trigger": "interval", "args": [], "kwargs": {}, "next_run_time": "2025-04-24T15:00:00", "status": "running"}, {"id": 2, "name": "示例任务", "func": "example_job", "trigger": "cron", "args": [], "kwargs": {}, "next_run_time": "2025-04-24T16:00:00", "status": "paused"}], "total": 2}';
        }
        
        if ($request_method = "POST") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"id": 3, "name": "新建任务", "func": "new_job", "trigger": "interval", "args": [], "kwargs": {}, "next_run_time": "2025-04-24T17:00:00", "status": "running"}';
        }
        
        return 405;
    }
    
    # 日志查询
    location /api/v1/logs {
        if ($request_method = "GET") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"items": [{"id": 1, "job_id": 1, "status": "success", "message": "任务执行成功", "created_at": "2025-04-24T14:00:00"}, {"id": 2, "job_id": 2, "status": "failed", "message": "任务执行失败", "created_at": "2025-04-24T13:00:00"}], "total": 2}';
        }
        
        return 405;
    }
    
    # 系统设置
    location /api/v1/settings {
        if ($request_method = "GET") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"settings": {"timezone": "Asia/Shanghai", "job_misfire_grace_time": 60, "job_coalesce": true, "job_max_instances": 3}}';
        }
        
        if ($request_method = "PUT") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Content-Type "application/json";
            return 200 '{"settings": {"timezone": "Asia/Shanghai", "job_misfire_grace_time": 60, "job_coalesce": true, "job_max_instances": 3}}';
        }
        
        return 405;
    }
}
